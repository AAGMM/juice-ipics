name: "Flujo CI-Test"
run-name: "Flujo CI-Test"
on:
  push:
    branches: [master]
  pull_request:
    branches: [master]
env:
  ANGULAR_CLI_VERSION: 13
jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: "Checkout repositorio"
        uses: actions/checkout@v4
      - name: "Configurar Node 18"
        uses: actions/setup-node@ 
        with:
          node-version: 18
      - name: "instalar CLI de Angular"
        run: npm install -g @angular/cli@$ANGULAR_CLI_VERSION
      - name: "Instalar dependencias"
        run: |
          npm install --ignore-scripts
          cd frontend
          npm install --ignore-scripts --legacy-peer-deps
      - name: "Lint"
        run: npm run lint
      - name: "Lint configuraciones personalizadas"
        run: >
          npm run lint:config -- -f ./config/7ms.yml &&
          npm run lint:config -- -f ./config/addo.yml &&
          npm run lint:config -- -f ./config/bodgeit.yml &&
          npm run lint:config -- -f ./config/ctf.yml &&
          npm run lint:config -- -f ./config/default.yml &&
          npm run lint:config -- -f ./config/fbctf.yml &&
          npm run lint:config -- -f ./config/juicebox.yml &&
          npm run lint:config -- -f ./config/mozilla.yml &&
          npm run lint:config -- -f ./config/oss.yml &&
          npm run lint:config -- -f ./config/quiet.yml &&
          npm run lint:config -- -f ./config/tutorial.yml &&
          npm run lint:config -- -f ./config/unsafe.yml &&

  test:
    runs-on: ubuntu-latest
    steps:
      - name: "checkout repositorio"
        uses: actions/setup-node@
      - name: "Configurar node 18"
        uses: actions/setup-node@
        with:
          node-version: 18
      - name: "Instalar CLI de Angular"
        run: npm install -g @angular/cli@$ANGULAR_CLI_VERSION
      - name: "instalar dependencias"
        run: |
          npm install
      - name: "Ejecutar test unitarios"
        uses: nick-invision/retry@
        with:
          timeout_minutes: 15
          max_attemps: 3
          command: npm test
      - name: "copiar informacion de test coverage pruebas unitarias"
        run: |
          cp build/reports/coverage/frontend-tests/lcov.info frontend-lcov.info
          cp build/reports/coverage/server-tests/lcov.info server-lcov.info
      - name: "Subir informacion de test coverage pruebas unitarias"
        uses: actions/upload-artifact@
        with:
          name: unit-test-cov
          path: |
           frontend-lcov.info
           server-lcov.info

  test-api:
    runs-on: ubuntu-latest
    steps:
      - name: "checkout repositorio"
        uses: actions/checkout@
      - name: "Configurar node 18"
        uses: actions/setup-node@
        with:
          node-version: 18
      - name: "Instalar CLI de Angular"
        run: npm install -g @angular/cli@$ANGULAR_CLI_VERSION
      - name: "instalar dependencias"
        run: |
          npm install
      - name: "Ejecutar test de integracion"
        uses: nick-invision/retry@
        with:
          timeout_minutes: 5
          max_attemps: 3
          command: |
            export NODE_ENV=test
            npm run frisby
          shell: bash
      - name: "copiar informacion de test coverage pruebas integracion"
        run: cp build/reports/coverage/api-tests/lcov.info api-lcov.info
      - name: "Subir informacion de test coverage pruebas integracion"
        uses: actions/upload-artifact@
        with:
          name: api-test-cov
          path: |
           api-lcov.info
           server-lcov.info
           
  reporte-coverage:
       needs: [test, test-api]
       runs-on: ubuntu-latest
       if: github.repository == 'juice-shop/juice-shop' && github.event_name == 'push'
       steps:
        - name: "checkout repositorio"
        uses: actions/checkout@
        - name: "Ddescargar informacion de test coverage pruebsa unitarias"
        uses: actions/download-artifact@
        with:
          name: unit-test-lcov
      - name: "Descargar informacion de test covetrage pruebas de integracion"
        uses: actions/download-artifact@
        with:
          name: api-test-lcov
      - name: "Publish coverage to codeclimate"
        env:
          CC_TEST_REPORTER_ID: ${{ secrets.CC_TEST_REPORTER_ID }}
        run: |
         curl -L...
        shell: bash
        
  e2e:
       if: github.repository == 'juice-shop/juice-shop' && github.event_name == 'push'
       runs-on: ubuntu-latest
       strategy:
         matrix:
          os: [ubuntu-latest, macos-latest]
          browser: [chrome, firefox]
          fail-fast: false
       steps:
        - name: "Checkout repositorio"
        uses: actions/checkout@
        - name: "configurar Node 18"
        uses: actions/setup-node@
        with:
          node-version: 18
      - name: "Instalar CLI de Angular"
        run: npm install -g @Angular/cli@$ANGULAR_CLI_VERSION
      - name: "Instalar aplicacion"
        run: npm install
      - name: "ejecutar tests end-to-end"
        uses: cypress-io/github-actions@
        ##Aqui se configura un servidor donde correr pruebas end-to-end
        with:
          install: false
          browser: ${{ matrix.browser }}
          start: npm start
          wait-on: http://localhost:3000
          record: true
          group: ${{ matrix.browser }} @ ${{ matrix.os }}
        env:
          SOLUTIONS_WEBHOOK: ${{ secrets.E2E_SOLUTIONS_WEBHOOK }}
          CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
          GITHUB_TOKEN ${{ secrets.GITHUB_TOKEN }}
  
